[
  {
    "objectID": "dataviz.html",
    "href": "dataviz.html",
    "title": "Data Viz",
    "section": "",
    "text": "Some of the work I’ve done:\n\nCarbon Majors Emissions and Chocolate Ratings are visual analyses using data from TidyTuesday\nText Analysis uses regular expressions to analyze data\nA Simulation Study uses visual inference to conduct a hypotheses test\nSQL contains my work using SQL to analyze a database and R to create visuals",
    "crumbs": [
      "Data Viz"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Veronica De Leon",
    "section": "",
    "text": "Hi! I’m Veronica De Leon(she/her) and welcome to my website. I love math and am currently getting into data science. More about me and my site on the ‘About’ page."
  },
  {
    "objectID": "tidytues2.html",
    "href": "tidytues2.html",
    "title": "Chocolate Rating",
    "section": "",
    "text": "About the Data\nChocolate Rating\nThis TidyTuesday data came from Flavors of Cacao, which includes a database of for over 2,700 plain dark chocolates that have been rated. This data covers information such as company manufacturer, company location, review date, country of bean origin, bean or bar name, cocoa percent, ingredients, memorable characteristic, and ratings, as seen from the tibble below.\n\n\nShow the code\n#transferring TidyTuesday data to tidyverse\nchocolates &lt;- tuesdata$chocolate\nhead(chocolates)\n\n\n# A tibble: 6 × 10\n    ref company_manufacturer company_location review_date country_of_bean_origin\n  &lt;dbl&gt; &lt;chr&gt;                &lt;chr&gt;                  &lt;dbl&gt; &lt;chr&gt;                 \n1  2454 5150                 U.S.A.                  2019 Tanzania              \n2  2458 5150                 U.S.A.                  2019 Dominican Republic    \n3  2454 5150                 U.S.A.                  2019 Madagascar            \n4  2542 5150                 U.S.A.                  2021 Fiji                  \n5  2546 5150                 U.S.A.                  2021 Venezuela             \n6  2546 5150                 U.S.A.                  2021 Uganda                \n# ℹ 5 more variables: specific_bean_origin_or_bar_name &lt;chr&gt;,\n#   cocoa_percent &lt;chr&gt;, ingredients &lt;chr&gt;,\n#   most_memorable_characteristics &lt;chr&gt;, rating &lt;dbl&gt;\n\n\nAfter further observation of the data, I thought it would be interesting to analyze how rating is affected by cocoa percent since this variable is often what’s most visible in most packaging.\n\n\nAnalysis\n\n\nShow the code\n#to create a scatter plot\nchocolates |&gt;\n  select(cocoa_percent, rating) |&gt;\n  group_by(cocoa_percent) |&gt;\n  summarize(avg_rating = mean(rating), na.rm = TRUE) |&gt; #took the average of the rating\n  filter(cocoa_percent &gt;= \"75%\") |&gt; #filtered cocoa percent to the ones greater than or equal to 75%\n   ggplot(aes(cocoa_percent, avg_rating)) +\n  geom_point(color = \"brown\", alpha = 0.5, size = 3) +\n  labs(\n    x = \"Cocoa Percent\",\n    y = \"Average Chocolate Rating\", \n    title = \"Chocolate Rating by Cocoa Percent\"\n  ) +\n  theme_light()\n\n\n\n\n\n\n\n\n\nThe graph doesn’t seem to show a strong correlation between cocoa percent (ranging between 75% - 99%) and average chocolate rating (ranging between 1-5). However, we can see that a cocoa percent of 78% received the highest average chocolate rating, while a cocoa percent of 91% received the lowest average chocolate rating. We can also observe how the rating stays at a pretty consistent range between 2.75 to 3 and above when the cocoa percent is between 75% and 88%, and only begins a huge drop in rating past 88%. So, a takeaway from the graph could be that the chocolate will be decent as long as its cocoa percent is between 75% to 88%.",
    "crumbs": [
      "Chocolate Rating"
    ]
  },
  {
    "objectID": "tidytues1.html",
    "href": "tidytues1.html",
    "title": "Carbon Majors Emissions",
    "section": "",
    "text": "About the Data\nCarbon Majors Emissions Data\nThis TidyTuesday data came from Carbon Majors, a database with historical production data of 122 of the world’s largest producers of oil, gas, and coal. The emissions data has data dating back to 1854 and “over 1.42 trillion tonnes of CO2e covering 72% of global fossil fuel and cement emissions”\n\n\nShow the code\n#transferring TidyTuesday data to tidyverse\nemit_co2 &lt;- tuesdata$emissions\nhead(emit_co2)\n\n\n# A tibble: 6 × 7\n   year parent_entity     parent_type commodity production_value production_unit\n  &lt;dbl&gt; &lt;chr&gt;             &lt;chr&gt;       &lt;chr&gt;                &lt;dbl&gt; &lt;chr&gt;          \n1  1962 Abu Dhabi Nation… State-owne… Oil & NGL            0.913 Million bbl/yr \n2  1962 Abu Dhabi Nation… State-owne… Natural …            1.84  Bcf/yr         \n3  1963 Abu Dhabi Nation… State-owne… Oil & NGL            1.83  Million bbl/yr \n4  1963 Abu Dhabi Nation… State-owne… Natural …            4.42  Bcf/yr         \n5  1964 Abu Dhabi Nation… State-owne… Oil & NGL            7.3   Million bbl/yr \n6  1964 Abu Dhabi Nation… State-owne… Natural …           17.3   Bcf/yr         \n# ℹ 1 more variable: total_emissions_MtCO2e &lt;dbl&gt;\n\n\nShow the code\nemit_co2 |&gt;\n  group_by(commodity) |&gt;\n  summarize(count = n()) |&gt;\n  head()\n\n\n# A tibble: 6 × 2\n  commodity          count\n  &lt;chr&gt;              &lt;int&gt;\n1 Anthracite Coal      368\n2 Bituminous Coal     1370\n3 Cement               263\n4 Lignite Coal        1008\n5 Metallurgical Coal  1073\n6 Natural Gas         3452\n\n\nAccording to the tibble, we can see that the data is divided into 7 variables: year, parent entity, parent type, commodity, production value, production unit, and total emissions of CO2. I was interested in seeing the different commodities, and after grouping by that variable, I saw that they used 9 different commodities (shown above). After observing the table, I began to wonder if throughout the years, there’s a shift in the type of commodity that’s contributing to a greater total emissions of CO2.\n\n\nAnalysis\nFor my plot, I tested this curiosity by first creating a scatter plot with the year as my x-axis and total emissions as my y-axis. I then wrapped it by commodity to observe the total emissions per year divided by commodity.\n\n\nShow the code\n#to create a scatter plot\nggplot(emit_co2, aes(x = year, y = total_emissions_MtCO2e, color = commodity)) +\n  geom_point(alpha = 0.5) +\n  labs(\n    x = \"Year\",\n    y = \"Total CO2 Emissions\",\n    title = \"Total Emissions per Commodity per Year\",\n    color = \"Commodity\"\n  ) +\n  theme_minimal () +\n  facet_wrap(~commodity)\n\n\n\n\n\n\n\n\n\nFrom the graph, we can see that most of the commodities’ total CO2 emissions stayed pretty constant. However, Oil & NGL and Natural Gas peaked around 1970s-1980s. And then by the 2000s, anthracite coal, cement, and metallurgical coal started to reach their peak. Bituminous coal and sub-bituminous coal are just starting to reach theirs past the 2000s.\nTo further compare these commodities, I also plotted them in a single plot and separated each commodity by color.\n\n\nShow the code\n#to create a scatter plot\nggplot(emit_co2, aes(x = year, y = total_emissions_MtCO2e, color = commodity)) +\n  geom_point(alpha = 0.5) +\n  labs(\n    x = \"Year\",\n    y = \"Total CO2 Emissions\",\n    title = \"Total Emissions per Year\",\n    color = \"Commodity\"\n  ) +\n  theme_minimal ()\n\n\n\n\n\n\n\n\n\nWhen all the commodities are combined, it appears that most of the commodities’ total CO2 emissions stayed pretty constant. However, by the 1970s-1980s, we can see that Oil & NGL (blue) and Natural Gas (violet), along with Bituminous Coal (orange), begin to rise above the other other commodities. By the 2000s, Bituminous Coal keeps increasing exponentially, while other commodities like Lignite Coal, Anthracite coal, and Sub-Bituminous coal are just starting to increase, but not as much as Bituminous coal. The exponential rise of total emissions being contributed by bituminous coal could be explained by the fact that bituminous coal is used for electricity, and throughout the years, the need for electricity also exponentially increased.",
    "crumbs": [
      "Carbon Majors Emissions"
    ]
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Veronica De Leon",
    "section": "",
    "text": "About Author\nI was born in the Philippines but I’ve been living in Los Angeles since I was nine. I’m currently studying at Pomona College for mathematics and statistics. I love crafting, specifically knitting and sewing (the image on my home page is a design that I sewed onto a shirt).\n\n\nAbout this site\nThis site currently contains various projects created using R and showcasing many visual analyses. Feel free to look around!"
  },
  {
    "objectID": "miniproj_2.html",
    "href": "miniproj_2.html",
    "title": "Text Analysis",
    "section": "",
    "text": "Show the code\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(stringr)\n\n\n\nAbout the Data\nNetflix Movies and TV Shows\n\n\nShow the code\nnetflix &lt;- read.csv(\"../veronica-2222.github.io/netflix_titles.csv\")\n\nnetflix |&gt;\n  group_by(director) |&gt;\n  summarize(count = n()) |&gt;\n  arrange(desc(count))\n\n\n# A tibble: 4,529 × 2\n   director                 count\n   &lt;chr&gt;                    &lt;int&gt;\n 1 \"\"                        2634\n 2 \"Rajiv Chilaka\"             19\n 3 \"Raúl Campos, Jan Suter\"    18\n 4 \"Marcus Raboy\"              16\n 5 \"Suhas Kadav\"               16\n 6 \"Jay Karas\"                 14\n 7 \"Cathy Garcia-Molina\"       13\n 8 \"Jay Chapman\"               12\n 9 \"Martin Scorsese\"           12\n10 \"Youssef Chahine\"           12\n# ℹ 4,519 more rows\n\n\nThis data came from kaggle.com and was uploaded by Shivam Bansal. It is regularly updated, but its last update was 3 years ago. The data covers 8,807 Netflix titles, and contains information like their type (TV show or movie), title, director, cast, country, date added on Netflix, actual release year, rating, and duration (as seen from the tibble above).\n\n\nGeneral Netflix Data\nAfter observing the data set, I thought it would be interesting to see if there are possible insights that could be found when comparing the year a show or movie was released and the year they were added on Netflix.\n\n\nShow the code\nnetflix |&gt;\n  select(release_year, date_added) |&gt;\n  mutate(added_year = str_extract(date_added, \"(?&lt;=, ).+(?=$)\")) |&gt; #this only takes in the years from the date added column\n  filter(!is.na(release_year), !is.na(added_year)) |&gt; #removes the NAs\n  ggplot(aes(x = release_year, y = added_year)) + #creates a scatterplot\n  geom_point(alpha = 0.3) +\n  labs(\n    x = \"Year Show/Movie was Released\",\n    y = \"Year Show/Movie was Added\",\n    title = \"Analysis of Year Show/Movie was Released\\n\\ versus Year Added on Netflix\"\n  ) +\ntheme_minimal()\n\n\n\n\n\n\n\n\n\nThe graph displays the difference between the year a show or movie was released versus the year it was added on Netflix. The opaqueness of the points suggests when majority of the shows and movies were added on Netflix. In this case it seems as if majority of the shows and movies were added in 2016 and onward.\nFocusing on TV shows, I wondered if the proportion of genres differed across different TVs, like TV-13 vs. TV-MA.\n\n\nShow the code\nnetflix|&gt;\n  select(rating, listed_in) |&gt;\n  mutate(tv_rating = str_extract(rating, \"(?&lt;=-).+(?=$)\")) |&gt; #only takes in the type of tv-rating, removes \"TV-\"\n  mutate(first_listed = str_extract(listed_in, \"\\\\w+\")) |&gt;  #creates a first_listed column with just the first genre they're listed in\n  filter(first_listed %in% c(\"Action\", \"Crime\", \"Dramas\", \"Comedies\")) |&gt; #filters the first listed in genres\n  filter(tv_rating %in% c(\"13\", \"14\", \"G\", \"PG\", \"MA\")) |&gt; #filters in the tv ratings\n  mutate (level_rating = fct_relevel(tv_rating, c(\"13\", \"14\", \"G\", \"PG\", \"MA\"))) |&gt; #relevels the tv rating so that they're in this order\n  ggplot(aes(x = level_rating, fill = first_listed)) + #creates a bar plot\n  geom_bar(position = \"fill\") +\n  labs(\n    title = \"Number of Specific TV Ratings\",\n    subtitle = \"Categorized by Genres\",\n    x = \"TV-__\",\n    y = \"Proportion of Shows\",\n    fill = \"Genre\",\n  ) +\n  theme_classic()\n\n\n\n\n\n\n\n\n\nThe bar reveals the proportion of shows’ first genre they are listed under and their TV-rating. It can reveal which genres were mostly rated TV-14, PG, etc. For example, one of the major points this bar reveals is that majority of the TV-show rated as G are Dramas. The lack of blue suggests that there are few TV shows that have ‘Crime’ as the first genre they are listed under. And many of the TV-14 and PG shows are listed under ‘Comedies’ and ‘Dramas’.\n\n\n\n\n\nNarrowed Netflix Data\nTo further analyze TV shows, I wanted to see if TV shows listed under Comedies for those added in 2021 had an average amount of seasons.\n\n\nShow the code\nnetflix |&gt;\n  select(type, duration, title, date_added, listed_in) |&gt;\n  group_by(type) |&gt;\n  filter(str_detect(type, \"TV Show\")) |&gt; #filters so that it only includes the TV shows\n  filter(str_detect(date_added , \"2021\")) |&gt; #filters so that it only includes those added in 2021\n  filter(str_detect(listed_in, \"Comedies\")) |&gt; #filters so that it includes those with \"Comedies\" in their genre\n  mutate(season = str_sub(duration, 1, 1)) |&gt;  #filters out the word \"season\"\n  summarize(type, title, season) |&gt;\n  ggplot(aes(x = season)) + #creates bar plot\n  geom_bar() +\n  labs(\n    title = \"Season and Show Count of Comedy TV Shows Added \\n\\ on Netflix in 2021\",\n    x = \"Number of Seasons\",\n    y = \"Number of Shows\"\n  ) +\n  theme_classic()\n\n\n\n\n\n\n\n\n\nThe bar graph reveals the frequency of comedy shows added on Netflix in 2021 to have a certain number of seasons. It is evident that majority of the comedy shows only have 1 season.\n\nChristmas Analysis\nThis specific analysis is a little more personal. I always enjoy Christmas movies, so I thought that I could gather a list of TV shows and movies added on Christmas Eve to expand my list of Christmas media.\n\n\nShow the code\nChristmas_eve &lt;- netflix |&gt;\n  select(title, type, date_added, listed_in) |&gt; \n  mutate(first_listed = str_extract(listed_in, \"\\\\w+\")) |&gt; #filters so that it only includes the first genre they're listed in\n  mutate(Title_Type=  str_c(title, type, first_listed, sep=': ')) |&gt; #creates a string with title: type: genre\n  mutate(Date = str_extract(date_added, \".+(?=,)\")) |&gt; #removes the year from date_added column\n  mutate(Genre = listed_in) |&gt;\n  filter(Date == \"December 24\"| Genre == \"TV\")|&gt; #filters so that it inludes those added on December 24 and are listed as TV\n    select(Title_Type) \n\nas_tibble(Christmas_eve)\n\n\n# A tibble: 9 × 1\n  Title_Type                                          \n  &lt;chr&gt;                                               \n1 Bridezilla: Movie: Comedies                         \n2 Cemara's Family: Movie: Children                    \n3 Hello, Love, Goodbye: Movie: Dramas                 \n4 CAROLE & TUESDAY: TV Show: Anime                    \n5 Como caído del cielo: Movie: Comedies               \n6 John Mulaney & The Sack Lunch Bunch: Movie: Children\n7 Lost in Space: TV Show: TV                          \n8 Stand Up and Away! with Brian Regan: TV Show: Stand \n9 Way Back into Love: TV Show: International          \n\n\nThe table classifies the titles added on Netflix on December 24 (with varying years) with their type (TV Show or Movie) and the first genre they are listed under. However, some of them aren’t Christmas movies, like Bridezilla and Hello, Love, Goodbye. So, I decided to dig deeper into this data set.\nInstead of only looking at the date added, I thought that if a description had the word “Christmas” in it, then maybe the likelihood of getting a Christmas movie or TV show would be higher.\n\n\nShow the code\nChristmas &lt;- netflix |&gt;\n  select(title, type, date_added, listed_in, description) |&gt;\n  filter(str_detect(description, \"Christmas\")) |&gt; #filters so that it only includes titles with Christmas in its description\n  mutate(first_listed = str_extract(listed_in, \"\\\\w+\")) |&gt; #only includes the first genre they're listed in\n  mutate(Date = str_extract(date_added, \"\\\\w{3}\")) |&gt; #only includes the first three letters of the month for the date they're added\n  mutate(Date = as.factor(Date)) |&gt; #factors Date column\n  mutate(Date = fct_relevel(Date, c(\"Jan\", \"Feb\", \"Mar\", \"Jun\", \"Jul\", \"Oct\", \"Nov\", \"Dec\"))) |&gt; #had to reorder the months \n  mutate(Title_Type =  str_c(title, type, first_listed, sep=': ')) |&gt; #creates a string with title:type:genre\n  summarize(Title_Type, Date) \n\nhead(Christmas)\n\n\n                                     Title_Type Date\n1         Love Is a Story: Movie: International  Jun\n2    Home for Christmas: TV Show: International  Dec\n3    An Unremarkable Christmas: Movie: Comedies  Dec\n4 How To Ruin Christmas: TV Show: International  Dec\n5       A California Christmas: Movie: Comedies  Dec\n6      A Trash Truck Christmas: Movie: Children  Dec\n\n\nThe table classifies titles on Netflix with the word “Christmas” in its description with their title, type, first genre listed. The column ‘Date’ was cleaned up so that it would only include the first three letters of the months. By only including descriptions that have the word “Christmas” in it, I was able to retrieve a greater list of Christmas movies and shows, as seen from the tibble above.\n\n\nShow the code\n#creates a bar plot with months as x-axis\nChristmas |&gt;\n  ggplot(aes(x = Date)) +\n  geom_bar(fill = \"darkgreen\") +\n  labs(\n    title = \"Count of Movies and TV Shows based on Month Added\",\n    x = \"Month\", \n    y = \"Count\"\n  ) +\n  theme(\n    axis.title = element_text(color = \"darkred\")\n  )\n\n\n\n\n\n\n\n\n\nSince I didn’t get a list of Christmas movies after filtering titles added on December 24, I also created this bar graph from the table above it to see when such titles with “Christmas” in its description are added on Netflix. From the bar graph, it appears that majority of them are added on December and November, so maybe Netflix adds them throughout the month of December and not just Christmas Eve. I also found it quite surprising that after observing this graph, there’s a couple of titles added in July and July, months I wouldn’t expect to see Christmas movies added on Netflix. The titles added in June and July are seen in the table below.\n\n\nShow the code\nJuly &lt;- Christmas|&gt;\n  filter(str_detect(Date, \"Jul\"))  #creates a table with just titles with Christmas in its description that are added in July\n\nJune &lt;- Christmas |&gt;\n  filter(str_detect(Date, \"Jun\")) #creates a table with just titles with Christmas in its description that are added in June\n\n\nSummer &lt;- rbind(July, June) #creates a table combining the two tables above it\nSummer\n\n\n                                          Title_Type Date\n1 Zipi & Zape y la Isla del Capitan: Movie: Children  Jul\n2              Love Is a Story: Movie: International  Jun\n3             Dr. Seuss' The Grinch: Movie: Children  Jun\n4    How the Grinch Stole Christmas: Movie: Children  Jun",
    "crumbs": [
      "Text Analysis"
    ]
  },
  {
    "objectID": "miniproj_3.html",
    "href": "miniproj_3.html",
    "title": "A Simulation Study",
    "section": "",
    "text": "Show the code\nlibrary(openintro)\nlibrary(tidyverse)\nlibrary(stringr)",
    "crumbs": [
      "A Simulation Study"
    ]
  },
  {
    "objectID": "miniproj_4.html",
    "href": "miniproj_4.html",
    "title": "SQL",
    "section": "",
    "text": "The link to database\nUsing SQL, I queried the Wideband Acoustic Immittance (WAI) Database hosted by Smith College. WAI measurements are made to hopefully provide noninvasive auditory diagnostic tools for everyone. The WAI database hosts WAI measures on ears from all ages(infants, NICU infant, child, adults).\n\n\nShow the code\nlibrary(tidyverse)\n\n\n\n\nShow the code\nlibrary(RMariaDB)\nlibrary(dplyr)\ncon_wai &lt;- dbConnect(\n  MariaDB(), host = \"scidb.smith.edu\",\n  user = \"waiuser\", password = \"smith_waiDB\", \n  dbname = \"wai\"\n)\nMeasurements &lt;- tbl(con_wai, \"Measurements\")\nPI_Info &lt;- tbl(con_wai, \"PI_Info\")\nSubjects &lt;- tbl(con_wai, \"Subjects\")\n\n\n# collect(Measurements)",
    "crumbs": [
      "SQL"
    ]
  },
  {
    "objectID": "finalpresentation.html#slide",
    "href": "finalpresentation.html#slide",
    "title": "A Simulation Study via Visual Inference",
    "section": "slide",
    "text": "slide\ntest"
  },
  {
    "objectID": "finalpresentation.html#about-the-data",
    "href": "finalpresentation.html#about-the-data",
    "title": "A Simulation Study Using Visual Inference",
    "section": "About the Data",
    "text": "About the Data\nAbout the Data\nDream Data\nFor this project, I used the ‘Dream’ data set from the openintro package. The data set came from SurveyUSA, News Poll and was collected on January 27-29, 2012. The poll surveyed the views of 910 people on the DREAM Act (a legislative proposed to give undocumented immigrants temporary residency in the US). Those surveyed were categorized into three ideologies: Liberal, Moderate, and Conservative. Their responses were: No, Not Sure, or Yes."
  },
  {
    "objectID": "finalpresentation.html#about-the-simulation",
    "href": "finalpresentation.html#about-the-simulation",
    "title": "A Simulation Study Using Visual Inference",
    "section": "About the Simulation",
    "text": "About the Simulation\nFrom the observed data of the data set:\n\nproportion of Liberals in support of the Dream Act = 0.65\nproportion of Moderates in support of Dream Act = 0.48.\nproportion of Conservatives in support of the Dream Act = 0.5\n\nHypotheses:\nP is the proportion of those in support of the Dream Act\n\\(H_0: P_L = P_M = P_C\\)\n\\(H_A: P_L \\neq P_M \\neq P_C\\)"
  },
  {
    "objectID": "finalpresentation.html#simulation",
    "href": "finalpresentation.html#simulation",
    "title": "A Simulation Study via Visual Inference",
    "section": "Simulation",
    "text": "Simulation\n\nlibrary(openintro)\nlibrary(tidyverse)\nlibrary(stringr)\n\nThe data set was edited so that the rows of the ideology column only included the first letter of each of the ideologies for simplicity. They were also releveled so that Liberal was on the left, Moderate was in the middle, and Conservative was on the right.\n\ndream &lt;- dream |&gt;\n  mutate(ideology = as.character(ideology)) |&gt;\n  mutate(ideology = str_extract(ideology, \"\\\\w\")) |&gt;\n  mutate(ideology = as.factor(ideology)) |&gt;\n  mutate(ideology = fct_relevel(ideology, c(\"L\", \"M\", \"C\"))) \n\nHere is the “statistic” in a form of a bar graph. This is our observed plot as it uses the information provided by the data set. We can see that the proportion of ‘Yes’, shaded in blue, is greater for Liberal.\n\n#to know which panel to randomly place the plot in when comparing with the null\nset.seed(47)\nsample(c(1:20), size = 1)\n\n[1] 18\n\nobs_dream &lt;- dream |&gt;\n  group_by(ideology) |&gt;\n  mutate(repeated = 18)\n\nobs_dream|&gt;\n   ggplot(aes(x = ideology, fill = stance)) +\n    geom_bar(position = \"fill\") +\n   labs(x = \"Ideology\", y = \"Proportion of Responses\", title = \"Observed Plot\", fill = \"Stance\")\n\n\n\n\n\n\n\n\nThen I created a function that conducts a permutation test by reshuffling the ideologies, but keeping the stance the same for each row.\n\npermute &lt;- function(rep){\n  dream |&gt;\n    mutate(ideology = sample(ideology, replace = FALSE)) |&gt;\n    mutate(repeated = rep)\n}\n\nHere I mapped out 19 data frames (leaving out 18 because that’s reserved for the observed) that outputs what we’d expect under the null, or if the likelihood of each ideology to have a certain stance is equal.\n\n#under the null\nset.seed(47)\nnull_dream_one &lt;- map((1:17), permute)|&gt;\n    list_rbind() \n\nnull_dream_two &lt;- map((19:20), permute) |&gt;\n  list_rbind() \n\nFinally, I combined all the data frames (the statistic and the 19 null data frames) and combined all of the bar graphs from the 20 data frames. In the very beginning, I used a sample to generate a number so that I know which panel to place the observed plot in. Through that, the observed plot was placed in Panel #18.\n\n#to plot all the graphs\nrbind(obs_dream, null_dream_one, null_dream_two) |&gt;\n  ggplot(aes(x = ideology, fill = stance)) +\n  geom_bar(position = \"fill\") +\n  facet_wrap(~repeated) +\n  labs(x = \"Ideology\", y = \"Proportion of Responses\", title = \"Comparison of Null Plots vs. Observed Plot\", fill = \"Stance\")\n\n\n\n\n\n\n\n\nAs we can see from the figure above, most of the shading of blue (which is what we’re interested in as it shows the proportion of “Yes”) is almost leveled, except for Panel #18. So, the observed plot (Panel #18) does stand out from the rest of the bar graphs as the shading of blue for “L” is greater compared to the others. This figure provides evidence to reject the null hypothesis, which hypothesized that the proportion of “Yes” is equal among the ideologies."
  },
  {
    "objectID": "finalpresentation.html#summary-of-simulation",
    "href": "finalpresentation.html#summary-of-simulation",
    "title": "A Simulation Study via Visual Inference",
    "section": "Summary of Simulation",
    "text": "Summary of Simulation\nI began this study by observing the data set and noticing that there is a greater proportion of Liberals who are in support of the DREAM Act. I tested this hypothesis by shuffling the order of the ideologies, via my permute function, to see if it was common to get the order of ideologies of the original data set. To compare the observation from the 19 reshuffles, I plotted their bar graphs and checked to see if the observed bar graph was identifiable among the bar graphs of the permuted data frames, and it was. So, we have reason to believe that there is a greater proportion of Liberals in support of the DREAM Act when compared to Moderates and Conservatives."
  },
  {
    "objectID": "miniproj_3.html#about-the-simulation",
    "href": "miniproj_3.html#about-the-simulation",
    "title": "A Simulation Study",
    "section": "About the Simulation",
    "text": "About the Simulation\nFrom the observed data of the data set, I noticed that the proportion of Liberals in support of the Dream Act (0.65) is greater than the proportion of Conservatives (0.5) and the proportion of Moderates (0.48). So, I set to test if there is truly a relationship between ideology and whether they are in support of the DREAM Act by comparing null plots and the observed plot.\nUnder the null, the proportions between ideologies in support of the DREAM Act are equal . So, when we compare the null plots and observed plot, we are checking to see if our observed plot differs from the null plots. If we can identify the observed plot from the null plots, then this gives us evidence to reject the null, and believe that there is a relationship between ideology and their support of the DREAM Act.",
    "crumbs": [
      "A Simulation Study"
    ]
  },
  {
    "objectID": "miniproj_3.html#simulation",
    "href": "miniproj_3.html#simulation",
    "title": "A Simulation Study",
    "section": "Simulation",
    "text": "Simulation\nThe data set was edited so that the rows of the ideology column only included the first letter of each of the ideologies for simplicity. They were also releveled so that Liberal was on the left, Moderate was in the middle, and Conservative was on the right.\n\n\nShow the code\ndream &lt;- dream |&gt;\n  mutate(ideology = as.character(ideology)) |&gt;\n  mutate(ideology = str_extract(ideology, \"\\\\w\")) |&gt; #only takes the first letter of the word\n  mutate(ideology = as.factor(ideology)) |&gt;\n  mutate(ideology = fct_relevel(ideology, c(\"L\", \"M\", \"C\")))  #relevels the ideologies in order L, M, C\n\n\nHere is the “statistic” in a form of a bar graph. This is our observed plot as it uses the information provided by the data set. We can see that the proportion of ‘Yes’, shaded in blue, is greater for Liberal.\n\n\nShow the code\n#to know which panel to randomly place the plot in when comparing with the null\nset.seed(47)\nsample(c(1:20), size = 1)\n\n\n[1] 18\n\n\nShow the code\nobs_dream &lt;- dream |&gt;\n  group_by(ideology) |&gt;\n  mutate(repeated = 18)\n\nobs_dream|&gt;\n   ggplot(aes(x = ideology, fill = stance)) +\n    geom_bar(position = \"fill\") +\n   labs(x = \"Ideology\", y = \"Proportion of Responses\", title = \"Observed Plot\", fill = \"Stance\")\n\n\n\n\n\n\n\n\n\nThen I created a function that conducts a randomization test by reshuffling the ideologies, but keeping the stance the same for each row.\n\n\nShow the code\n#created a function that shuffles ideology column\nshuffle &lt;- function(rep){\n  dream |&gt;\n    mutate(ideology = sample(ideology, replace = FALSE)) |&gt;\n    mutate(repeated = rep)\n}\n\n\nHere I mapped out 19 data frames (leaving out 18 because that’s reserved for the observed) that outputs what we’d expect under the null, or if the likelihood of each ideology to have a certain stance is equal.\n\n\nShow the code\n#to get data that would appear under the null\nset.seed(47)\nnull_dream_one &lt;- map((1:17), shuffle)|&gt;\n    list_rbind() \n\nnull_dream_two &lt;- map((19:20), shuffle) |&gt;\n  list_rbind() \n\n\nFinally, I combined all the data frames (the statistic and the 19 null data frames) and combined all of the bar graphs from the 20 data frames. In the very beginning, I used a sample to generate a number so that I know which panel to place the observed plot in. Through that, the observed plot was placed in Panel #18.\n\n\nShow the code\n#to plot all the graphs\nrbind(obs_dream, null_dream_one, null_dream_two) |&gt;\n  ggplot(aes(x = ideology, fill = stance)) +\n  geom_bar(position = \"fill\") +\n  facet_wrap(~repeated) +\n  labs(x = \"Ideology\", y = \"Proportion of Responses\", title = \"Comparison of Null Plots vs. Observed Plot\", fill = \"Stance\")\n\n\n\n\n\n\n\n\n\nAs we can see from the figure above, most of the shading of blue (which is what we’re interested in as it shows the proportion of “Yes”) is almost leveled, except for Panel #18. So, the observed plot (Panel #18) does stand out from the rest of the bar graphs as the shading of blue for “L” is greater compared to the others. This figure provides evidence to reject the null hypothesis, which hypothesized that the proportion of “Yes” is equal among the ideologies.\n\nSummary of Simulation\nI began this study by observing the data set and noticing that there is a greater proportion of Liberals who are in support of the DREAM Act. I tested this hypothesis by shuffling the order of the ideologies, via my shuffle function, to see if it was common to get the order of ideologies of the original data set. To compare the observation from the 19 reshuffles, I plotted their bar graphs and checked to see if the observed bar graph was identifiable among the bar graphs of the shuffled data frames, and it was.\nBecause the observed plot is identifiable, we have evidence to reject the null and conclude that there is a difference among the proportion of those in support of the DREAM Act across the three political ideologies. Since the data came from a SurveyUSA poll, the results of this study describes Americans who identify with one of the three political ideologies used in the survey. So based on the study, we can conclude that Americans who identify as liberal are more likely to be in support of the DREAM Act than Americans who identify as moderate or conservative. However, we also need to take into account that the data came from a survey conducted in 2012, which was 12 years ago. Which means that although the study lets us generalize the results to the American population, it is limited to Americans during the 2010s as immigration policies have changed since then, and people affiliated with the three ideologies might have changed their stance on the DREAM Act if they were to be asked today.",
    "crumbs": [
      "A Simulation Study"
    ]
  },
  {
    "objectID": "finalpresentation.html#cleaning-up-data",
    "href": "finalpresentation.html#cleaning-up-data",
    "title": "A Simulation Study Using Visual Inference",
    "section": "Cleaning up Data",
    "text": "Cleaning up Data\n\nlibrary(openintro)\nlibrary(tidyverse)\nlibrary(stringr)\n\nThe data set was edited so that the rows of the ideology column only included the first letter of each of the ideologies for simplicity. They were also releveled so that Liberal was on the left, Moderate was in the middle, and Conservative was on the right.\n\ndream &lt;- dream |&gt;\n  mutate(ideology = as.character(ideology)) |&gt;\n  mutate(ideology = str_extract(ideology, \"\\\\w\")) |&gt;\n  mutate(ideology = as.factor(ideology)) |&gt;\n  mutate(ideology = fct_relevel(ideology, c(\"L\", \"M\", \"C\")))"
  },
  {
    "objectID": "finalpresentation.html#test-statistic",
    "href": "finalpresentation.html#test-statistic",
    "title": "A Simulation Study Using Visual Inference",
    "section": "“Test Statistic”",
    "text": "“Test Statistic”\n\n#to know which panel to randomly place the plot in when comparing with the null\nset.seed(47)\nsample(c(1:20), size = 1)\n\nobs_dream &lt;- dream |&gt;\n  group_by(ideology) |&gt;\n  mutate(repeated = 18)\n\n\nobs_dream|&gt;\n   ggplot(aes(x = ideology, fill = stance)) +\n    geom_bar(position = \"fill\") +\n   labs(x = \"Ideology\", y = \"Proportion of Responses\", title = \"Observed Plot\", fill = \"Stance\")"
  },
  {
    "objectID": "finalpresentation.html#null-distribution-null-plots",
    "href": "finalpresentation.html#null-distribution-null-plots",
    "title": "A Simulation Study Using Visual Inference",
    "section": "Null Distribution –> Null Plots",
    "text": "Null Distribution –&gt; Null Plots\n\nshuffle &lt;- function(rep){\n  dream |&gt;\n    mutate(ideology = sample(ideology, replace = FALSE)) |&gt;\n    mutate(repeated = rep)\n}\n\nAfter creating shuffle function, I mapped out 19 data frames that outputs what we’d expect under the null, or if the likelihood of each ideology to have each stance is equal.\n\n#under the null\nset.seed(47)\nnull_dream_one &lt;- map((1:17), shuffle)|&gt;\n    list_rbind() \n\nnull_dream_two &lt;- map((19:20), shuffle) |&gt;\n  list_rbind()"
  },
  {
    "objectID": "finalpresentation.html#null-vs.-observed",
    "href": "finalpresentation.html#null-vs.-observed",
    "title": "A Simulation Study Using Visual Inference",
    "section": "Null Vs. Observed",
    "text": "Null Vs. Observed\n\n#to plot all the graphs\nrbind(obs_dream, null_dream_one, null_dream_two) |&gt;\n  ggplot(aes(x = ideology, fill = stance)) +\n  geom_bar(position = \"fill\") +\n  facet_wrap(~repeated) +\n  labs(x = \"Ideology\", y = \"Proportion of Responses\", title = \"Comparison of Null Plots vs. Observed Plot\", fill = \"Stance\")"
  },
  {
    "objectID": "finalpresentation.html#conclusion",
    "href": "finalpresentation.html#conclusion",
    "title": "A Simulation Study Using Visual Inference",
    "section": "Conclusion",
    "text": "Conclusion\nBecause the observed plot is identifiable, we have evidence to reject the null and conclude that there is a difference among the proportion of those in support of the DREAM Act across the three political ideologies. Since the data came from a SurveyUSA poll, the results of this study describes Americans who identify with one of the three political ideologies used in the survey. So based on the study, we can conclude that Americans who identify as liberal are more likely to be in support of the DREAM Act than Americans who identify as moderate or conservative. However, we also need to take into account that the data came from a survey conducted in 2012, which was 12 years ago. Which means that although the study lets us generalize the results to the American population, it is limited to Americans during the 2010s as immigration policies have changed since then, and people affiliated with the three ideologies might have changed their stance on the DREAM Act if they were to be asked today."
  },
  {
    "objectID": "finalpresentation.html#null-vs.-observed-output",
    "href": "finalpresentation.html#null-vs.-observed-output",
    "title": "A Simulation Study Using Visual Inference",
    "section": "Null Vs. Observed",
    "text": "Null Vs. Observed"
  },
  {
    "objectID": "finalpresentation.html#section",
    "href": "finalpresentation.html#section",
    "title": "A Simulation Study via Visual Inference",
    "section": "",
    "text": "As we can see from the figure above, most of the shading of blue (which is what we’re interested in as it shows the proportion of “Yes”) is almost leveled, except for Panel #18. So, the observed plot (Panel #18) does stand out from the rest of the bar graphs as the shading of blue for “L” is greater compared to the others. This figure provides evidence to reject the null hypothesis, which hypothesized that the proportion of “Yes” is equal among the ideologies."
  },
  {
    "objectID": "finalpresentation.html#test-statistic-output",
    "href": "finalpresentation.html#test-statistic-output",
    "title": "A Simulation Study Using Visual Inference",
    "section": "“Test Statistic”",
    "text": "“Test Statistic”"
  },
  {
    "objectID": "finalpresentation.html#claim",
    "href": "finalpresentation.html#claim",
    "title": "A Simulation Study Using Visual Inference",
    "section": "Claim",
    "text": "Claim\nFrom the observed data of the data set:\n\nproportion of Liberals in support of the Dream Act = 0.65\nproportion of Moderates in support of Dream Act = 0.48.\nproportion of Conservatives in support of the Dream Act = 0.5\n\nHypotheses:\nP is the proportion of those in support of the Dream Act\n\\(H_0: P_L = P_M = P_C\\)\n\\(H_A: P_L \\neq P_M \\neq P_C\\)"
  },
  {
    "objectID": "finalpresentation.html",
    "href": "finalpresentation.html",
    "title": "A Simulation Study Using Visual Inference",
    "section": "",
    "text": "About the Data\nDream Data\nFor this project, I used the ‘Dream’ data set from the openintro package. The data set came from SurveyUSA, News Poll and was collected on January 27-29, 2012. The poll surveyed the views of 910 people on the DREAM Act (a legislative proposed to give undocumented immigrants temporary residency in the US). Those surveyed were categorized into three ideologies: Liberal, Moderate, and Conservative. Their responses were: No, Not Sure, or Yes."
  },
  {
    "objectID": "chocolate/shinyextension.html",
    "href": "chocolate/shinyextension.html",
    "title": "Untitled",
    "section": "",
    "text": "library(shiny)\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(\"tidytuesdayR\")\nlibrary(dplyr)\ntuesdata &lt;- tidytuesdayR::tt_load('2022-01-18')\n\n---- Compiling #TidyTuesday Information for 2022-01-18 ----\n--- There is 1 file available ---\n\n\n── Downloading files ───────────────────────────────────────────────────────────\n\n  1 of 1: \"chocolate.csv\"\n\nchocolates &lt;- tuesdata$chocolate\n\nui &lt;- fluidPage(\n  titlePanel(\"Average Rating Versus Cocoa Percent\"),\n  \n  sidebarPanel(\n    selectInput(\"xvar\", \"Bean origin\",\n                choices = c(\"Venezuela\", \"Peru\", \"Dominican Republic\", \"Ecuador\", \n                            \"Madagascar\", \"Blend\", \"Nicaragua\", \"Bolivia\", \"Colombia\", \"Tanzania\")\n                )\n  )\n  )\nmainPanel(\n  plotOutput(\"myplot\")\n)\n\n\n\n\n\nserver &lt;- function(input, output) {\n  newchocolates &lt;- reactive({\n    chocolates |&gt;\n      filter(country_of_bean_origin %in% input$xvar)\n  })\n  \n  output$myplot &lt;- renderPlot({\n    ggplot(data = newchocolates(), aes(x=rating)) +\n      geom_histogram()\n  }\n  )\n}\n#create Shiny app\nshinyApp(ui, server)\n\nShiny applications not supported in static R Markdown documents"
  },
  {
    "objectID": "miniproj_4.html#sources",
    "href": "miniproj_4.html#sources",
    "title": "SQL",
    "section": "Sources",
    "text": "Sources\n\nShaver MD, Sun XM. Wideband energy reflectance measurements: effects of negative middle ear pressure and application of a pressure compensation procedure. J Acoust Soc Am. 2013 Jul;134(1):332-41. doi: 10.1121/1.4807509. PMID: 23862811.\nVoss, Susan E. Ph.D. Resource Review. Ear and Hearing 40(6):p 1481, November/December 2019. | DOI: 10.1097/AUD.0000000000000790",
    "crumbs": [
      "SQL"
    ]
  }
]